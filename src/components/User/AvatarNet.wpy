<style lang="scss" type="text/scss">
    @import "../../common/styles/variables.scss";
    @import "../../common/styles/mixins.scss";
    @import "../../common/styles/common.scss";

    .net{
		&-container{
			position: relative;
			width: 750rpx; 
        	height: 840rpx; 
			overflow: hidden;
		}
		&-userhead{
			position: absolute;
			width: 336rpx;
			height: 336rpx;
			top: 232rpx;
			left: 204rpx;
			transition: opacity 1s;
		}
		&-rings{
			position: absolute;
			width: 100%;
			height: 100%;
		}
		&-transport{
			transition: all 1s;
			overflow: hidden;

			image{
				width: 100%;
				height: 100%;
				border-radius: 50%;
			}
		}
	}
</style>

<template>
    <view class="net-container">
        <!-- 用户中心头像显示 -->
        <view class="l-rowAllMid net-userhead"  style='opacity: {{userhead.opacity}};'>
            <image class="net-rings" src='../../static/images/contacts/rings.png'></image>
            <ava :info='userhead' :opacity='userhead.opacity'></ava>
		</view>

        <!-- 人脉网显示图一 -->
        <repeat for="{{avaList1}}" item="item" index='idx'>
			<ava :info='item' @avaClick.user='changeUser' :opacity='avaList1opacity' :display='avaList1show'></ava>
		</repeat>

		<!-- 人脉网显示图二 -->
		<repeat for="{{avaList2}}" item="item" index='idx'>
			<ava :info='item' @avaClick.user='changeUser' :opacity='avaList2opacity' :display='avaList2show'></ava>
		</repeat>

		<!-- 人脉网显示图三 -->		
		<repeat for="{{avaList3}}" item="item" index='idx'>
			<ava :info='item' @avaClick.user='changeUser' :opacity='avaList3opacity' :display='avaList3show'></ava>
		</repeat>

        <!-- 为完成点击头像切换人脉网效果而设置的特殊模块 -->
        <view class='net-avatar net-transport absolute' style="width: {{transport.size}}rpx; height: {{transport.size}}rpx; top: {{transport.top}}rpx; left: {{transport.left}}rpx; display: {{transport.show}}">
            <image src='{{transport.src}}'></image>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import Avatar from './Avatar'
    
    /*
     * {props}: usersrc: 用户头像链接/ srclist: 用户好友头像链接
     */
	export default class AvatarNet extends wepy.component {
        components = {
            ava: Avatar
		}
		
		props = {
			usersrc: {
				type: String
			}, 
			srclist: {
				type: Array
			}
		}

        data = {
			userhead: {
				src: '',
				size: '204',
				opacity: '1'
			},
			// 除用户头像外的其他头像
			avaList1opacity: '1',
			avaList2opacity: '0',
			avaList3opacity: '0',
			avaList1show: 'block',
			avaList2show: 'none',
			avaList3show: 'none',
			avaList1: [
				{
                size: '112',
                top: '200',
                left: '148'
				},{
					size: '112',
					top: '168',
					left: '472'
				},{
					size: '112',
					top: '520',
					left: '160'
				},{
					size: '112',
					top: '520',
					left: '480'
				},{
					size: '64',
					top: '104',
					left: '344'
				},{
					size: '64',
					top: '400',
					left: '48'
				},{
					size: '64',
					top: '400',
					left: '642'
				},{
					size: '64',
					top: '718',
					left: '208'
				},{
					size: '64',
					top: '718',
					left: '480'
				}
			],
			avaList2: [
				{
					size: '112',
					top: '112',
					left: '320'
				},{
					size: '112',
					top: '346',
					left: '92'
				},{
					size: '112',
					top: '354',
					left: '540'
				},{
					size: '112',
					top: '580',
					left: '320'
				},{
					size: '64',
					top: '166',
					left: '72'
				},{
					size: '64',
					top: '168',
					left: '608'
				},{
					size: '64',
					top: '600',
					left: '104'
				},{
					size: '64',
					top: '614',
					left: '560'
				},{
					size: '64',
					top: '770',
					left: '344'
				}
			],
			avaList3: [
				{
					size: '112',
					top: '160',
					left: '440'
				},{
					size: '112',
					top: '320',
					left: '110'
				},{
					size: '112',
					top: '400',
					left: '520'
				},{
					size: '112',
					top: '540',
					left: '220'
				},{
					size: '64',
					top: '54',
					left: '376'
				},{
					size: '64',
					top: '140',
					left: '140'
				},{
					size: '64',
					top: '652',
					left: '96'
				},{
					size: '64',
					top: '620',
					left: '530'
				},{
					size: '64',
					top: '730',
					left: '380'
				}
			],
			transport: {
				show: '',
				src: '',
				size: '',
				top: '',
				left: ''
			}
		}

		events = {
			changeGroup (e) {
				if (this.avaList1opacity === '1') {
					this.avaList1opacity = '0';
					this.avaList2show = 'block';

					setTimeout(() => {
						this.avaList2opacity = '1';
						this.avaList1show = 'none';
						this.$apply();
					}, 1000)

					this.$apply();
					return ;
				} if (this.avaList2opacity === '1') {
					this.avaList2opacity = '0';
					this.avaList3show = 'block';

					setTimeout(() => {
						this.avaList3opacity = '1';
						this.avaList2show = 'none';
						this.$apply();
					}, 1000)

					this.$apply();
					return ;
				} if (this.avaList3opacity === '1') {
					this.avaList3opacity = '0';
					this.avaList1show = 'block';

					setTimeout(() => {
						this.avaList1opacity = '1';
						this.avaList3show = 'none';
						this.$apply();
					}, 1000)

					this.$apply();
					return ;
				}
			},
		}

		methods = {
			// 还应在此方法中向主页发起请求，用于刷新用户好友头像列表
			changeUser (e) {
				console.log(e.currentTarget)
				const listNum = (e.currentTarget.id).slice(7, 8);
				const idx = (e.currentTarget.id).slice(8);
				
				let avaList = [];

				// 消失动画
				switch (listNum) {
					case '1':{
						this.avaList1opacity = '0';
						avaList = this.avaList1;

						setTimeout(() => {
							this.avaList1show = 'none';
							this.$apply();
						}, 1000)

						break;
					}
					case '2':{
						this.avaList2opacity = '0';
						avaList = this.avaList2;

						setTimeout(() => {
							this.avaList2show = 'none';
							this.$apply();
						}, 1000)

						break;
					}
					case '3':{
						this.avaList3opacity = '0';
						avaList = this.avaList3;

						setTimeout(() => {
							this.avaList3show = 'none';
							this.$apply();
						}, 1000)

						break;
					}
				}
				this.userhead.opacity = '0';

				// 移位动画
				this.transport.src = avaList[idx].src;
				this.transport.size = avaList[idx].size;
				this.transport.top = avaList[idx].top;
				this.transport.left = avaList[idx].left;
				this.transport.show = 'block';

				this.$apply();

				setTimeout(() => {
					this.transport.size = '204';
					this.transport.top = '296';
					this.transport.left = '270';
					this.$apply();
				}, 1000)
				

				setTimeout(() => {
					this.userhead.opacity = '1';
					this.userhead.src = this.transport.src;
					this.avaList1show = 'block';
					
					this.$apply();
				}, 2000)
				
				// 清除移位容器状态，为下次动画做准备
				setTimeout(() => {
					this.avaList1opacity = '1';

					this.transport.show = 'none';
					this.transport.src = '';
					this.transport.size = '';
					this.transport.top = '';
					this.transport.left = '';

					this.$apply();
				}, 3000)
			},
			jumpToGroups (e) {
				wx.navigateTo({
					url: './contacts/groups'
				})
			}
		}

		onLoad () {
			console.log(this)
			console.log(this.usersrc)

			this.userhead.src = this.usersrc;

			// 只需初始化第一个列表即可
			this.avaList1.forEach((val, idx) => {
				val.display = this.avaList1show;
				val.opacity = this.avaList1opacity;
				val.src = this.srclist[idx];
				val.id = 'avaList1' + idx;
			})

			this.$apply();
		}
	}
</script>
