<style lang="scss" type="text/scss">
	@import "../../common/styles/variables.scss";
	@import "../../common/styles/common.scss";

	page{
		background: #fafafa;
		@include colBox();
		@include colMidBox();
	}

	.slider-list{
		width: 750rpx;
		overflow: hidden;
	}

	.btn-can{
		position: fixed;
		bottom: 0;
		width: 750rpx;
		height: 145rpx;
		background: #fafafa;
	}

	.modal{
		position: absolute;
		top: 390rpx;
		left: 112rpx;
		width: 530rpx;
		height: 300rpx;
		border-radius: 8rpx;
		background: #fff;

		&-input{
			position: relative;
			width: 100%;
			height: 212rpx;

			input{
				width: 80%;
				padding-left: 16rpx;
				border-bottom: 4rpx solid $blue;
			}

			&-count{
				position: absolute;
				bottom: 15rpx;
				right: 5%;
				width: 100%;
				font-size: 30rpx;
				font-weight: lighter;
				color: $grey;
				text-align: right;
			}
		}

		&-btns{
			width: 100%;
			height: 90rpx;
		}

		&-sure{
			width: 50%;
			height: 100%;
			text-align: center;
			color: #394AE6;
			font-size: 36rpx;
			border-top: 2rpx solid #DCDDE6;
			border-left: 2rpx solid #DCDDE6;
			padding-top: 20rpx;
		}

		&-cancel{
			width: 50%;
			height: 100%;
			text-align: center;
			color: #818399;
			font-size: 36rpx;
			border-top: 2rpx solid #DCDDE6;
			padding-top: 20rpx;
		}
	}

	.mask{
		position: absolute;
		width: 750rpx;
		background: rgba(0, 0, 0, 0.5);
	}
</style>

<template>
	<scroll-view scroll-y class="slider-list" style="height: {{windowHeight - 145}}rpx;">
		<repeat for='{{list}}' item='item' index='idx'>
			<slider :item='item' :idx='idx' @sliderClick.user='jumpToList'></slider>
		</repeat>
	</scroll-view>

	<view class='btn-can l-rowAllMid'>
		<btn title="创建一个新的人脉圈" width='624' height='80' radius='8' color='bottom-blue' @btnClick.user='createGroup'></btn>
	</view>

	<view hidden="{{!showMask}}" class="mask l-rowAllMid" style="height: {{windowHeight}}rpx;">
		<view class="modal l-col">
			<view class="modal-input l-rowAllMid">
				<input placeholder="填写名字" placeholder-style='color: #818399; font-size: 32rpx;' bindinput='getInputValue' value='{{groupName}}' maxlenght='10'/>
				<view class="modal-input-count">{{groupName.length}}/10</view>
			</view>
			<view class="modal-btns l-row">
				<view class="modal-cancel" @tap='cancelCreate'>取消</view>
				<view class="modal-sure" @tap='sureCreate'>创建</view>
			</view>
		</view>
	</view>
</template>

<script>
	import page from '../base/basicPage'
	import Slider from '../../components/Card/Slider'
	import Button from '../../components/Button/Button'

	export default class Groups extends page {
		config = {
			navigationBarTitleText: '我的人脉圈'
		}

		components = {
			slider: Slider,
			btn: Button
		}

		data = {
			list: [],
			windowHeight: '',
			groupName: '',
			showMask: false
		}

		methods = {
			jumpToList (e, idx) {
				this.$WX.jumpTo('./list?id=' + this.list[idx].id + '&nid=' + this.list[idx].nid);
			},
			createGroup (e) {
				this.showMask = true;
			},
			cancelCreate (e) {
				this.showMask = false;
				this.groupName = '';
			},
			getInputValue (e) {
				this.groupName = e.detail.value;
			},
			sureCreate (e) {
				let netName = this.groupName.trim();
				this.groupName = '';

				if ((!this.$UTIL.isInputLegal(netName)) || netName === '' || netName.length > 10 || netName === '朋友圈' || netName === '帮我回答问题的人' || netName === '帮我传播问题的人') {
					this.$WX.toast('这个不可以哦, 另外起个名字吧( ˘•ω•˘ )');
				} else {
					this.list.push({
						id: this.$parent.userId,
						title: netName,
						num: 1
					})

					this.$apply();

					this.$API('createNewNet', {networkName: netName, networkUrl: ''}, {Cookie: 'JSESSIONID=' + this.$parent.sessionId})
					.then(res => {
						this.list[this.list.length - 1].nid = res.data;
					})
				}

				this.showMask = false
				this.$apply();
			}
		}

		onLoad () {
			console.log('groups');

			this.list = [];

			this.showMask = false;

			// 获取用户窗口可用高度
			this.windowHeight = this.$parent.screenHeight;

			// 获取用户人脉网列表
			this.$API('getNetList', {}, {Cookie: 'JSESSIONID=' + this.$parent.sessionId})
			.then(res => {
				console.log(res)
				if (res.data) {
					for (let i = 0; i < res.data.length; i++) {
						let ele = {};
						
						ele.id = res.data[i].uid;
						ele.nid = res.data[i].id;
						ele.src = res.data[i].networkUrl || '';
						ele.title = res.data[i].networkName;
						ele.num = res.data[i].count || '1';

						this.list.push(ele);
					}
					this.$apply();
				}
			})
		}
	}
</script>
